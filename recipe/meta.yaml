{% set version = "0.9-6.1" %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-mcmc
  version: {{ version|replace("-", "_") }}

source:
  fn: mcmc_{{ version }}.tar.gz
  url:
    - https://cran.r-project.org/src/contrib/mcmc_{{ version }}.tar.gz
    - https://cran.r-project.org/src/contrib/Archive/mcmc/mcmc_{{ version }}.tar.gz
  sha256: 692bb1cd4a9d09ddcbec3bcaaa4daccd06303f12188dfe51a95b467f558336c4

build:
  merge_build_host: True  # [win]
  number: 0
  skip: true  # [win32]

  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - posix                # [win]
    - {{ compiler('c') }}        # [unix]
    - {{ compiler('m2w64_c') }}  # [win]
  host:
    - r-base

  run:
    - r-base

test:
  commands:
    - $R -e "library('mcmc')"  # [not win]
    - "\"%R%\" -e \"library('mcmc')\""  # [win]

about:
  home: http://www.stat.umn.edu/geyer/mcmc/, https://github.com/cjgeyer/mcmc
  license: MIT
  license_file: LICENSE
  summary: Simulates continuous distributions of random vectors using Markov chain Monte Carlo
    (MCMC).  Users specify the distribution by an R function that evaluates the log
    unnormalized density.  Algorithms are random walk Metropolis algorithm (function
    metrop), simulated tempering (function temper), and morphometric random walk Metropolis
    (Johnson and Geyer, 2012, <https://doi.org/10.1214/12-AOS1048>, function morph.metrop),
    which achieves geometric ergodicity by change of variable.
  license_family: MIT

extra:
  recipe-maintainers:
    - conda-forge/r
    - dpryan79
    - johanneskoester
    - bgruening
    - daler
    - jdblischak
